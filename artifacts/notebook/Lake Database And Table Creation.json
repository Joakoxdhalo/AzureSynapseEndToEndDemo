{
	"name": "Lake Database And Table Creation",
	"properties": {
		"folder": {
			"name": "Exploration"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spkpoolsyncapab",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "19d9b602-0069-4676-899a-4b4ab3f18d1e"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/b975c151-847a-490b-8e07-624a95938e2b/resourceGroups/az-spk-dev-rg-ana-cus-000/providers/Microsoft.Synapse/workspaces/syncapabwks/bigDataPools/spkpoolsyncapab",
				"name": "spkpoolsyncapab",
				"type": "Spark",
				"endpoint": "https://syncapabwks.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spkpoolsyncapab",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 5,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					"StorageName = \"medicaldl\"\r\n",
					"DatasetSize = \"1tb\""
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"DROP DATABASE IF EXISTS fhirdbexploration CASCADE;\r\n",
					"CREATE DATABASE fhirdbexploration;"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"USE fhirdbexploration"
				],
				"execution_count": 23
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"curated_location = \"abfss://curated@\" + StorageName + \".dfs.core.windows.net/fhir/\"+ DatasetSize +\"/\""
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"claimDiagonisLocation = curated_location + \"Claim_diagnosis/\"\r\n",
					"spark.conf.set('claimDiagonisLocation',claimDiagonisLocation)\r\n",
					"\r\n",
					"claimInsuranceLocation = curated_location + \"Claim_insurance/\"\r\n",
					"spark.conf.set('claimInsuranceLocation',claimInsuranceLocation)\r\n",
					"\r\n",
					"claimProcedureLocation = curated_location + \"Claim_procedure/\"\r\n",
					"spark.conf.set('claimProcedureLocation',claimProcedureLocation)"
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"DROP TABLE IF EXISTS fhirdbexploration.claimdiagnosis;\r\n",
					"CREATE TABLE fhirdbexploration.claimdiagnosis USING PARQUET LOCATION '${claimDiagonisLocation}';\r\n",
					"\r\n",
					"DROP TABLE IF EXISTS fhirdbexploration.claiminsurance;\r\n",
					"CREATE TABLE fhirdbexploration.claiminsurance USING PARQUET LOCATION '${claimInsuranceLocation}';\r\n",
					"\r\n",
					"DROP TABLE IF EXISTS fhirdbexploration.claimprocedure;\r\n",
					"CREATE TABLE fhirdbexploration.claimprocedure USING PARQUET LOCATION '${claimProcedureLocation}';"
				],
				"execution_count": 35
			}
		]
	}
}